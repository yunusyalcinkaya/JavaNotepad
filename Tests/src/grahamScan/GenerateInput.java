package grahamScan;
/*
 * Size verilen bir .txt file aÅŸaÄŸÄ±daki formatta olacak ÅŸekilde size
 * verildiÄŸinde bu noktalar kÃ¼mesi iÃ§erisinde birbirine en uzak olan 2
 * noktayÄ± ve aralarÄ±ndaki uzaklÄ±ÄŸÄ± bastÄ±racak bir program yazmanÄ±zÄ±
 * istiyorum. Ã–nce sizin aklÄ±nÄ±za gelen Ã§Ã¶zÃ¼m yÃ¶nteminiz ile bir program
 * geliÅŸtirin ve tamamlayÄ±n. ArdÄ±ndan CONVEX HULL ALGORITHM iÃ§in araÅŸtÄ±rma
 * yapÄ±n ve bu algoritma ile yeni bir program yazÄ±n

 * NOT: Her iki uygulama da aynÄ± .txt file'dan okuyacak ÅŸekilde programlansÄ±n
 * ki birlikte deneyebilelim ğŸ˜Š

 * - File FormatÄ±:
 * x1 y1
 * x2 y2
 * x3 y3
 * x4 y4

 * - Ã–rnek File:
 * 5 10
 * 3 5
 * 6 12
 * 9 20
 */

 /*
  * iki nokta arasÄ±ndaki uzaklÄ±k = |AB| = ( (x2 - x1)^2 + (y2 - y1)^2 )sqrt
  * karekÃ¶k metodu: Math.sqrt()
  * mutlak deÄŸer metodu: Math.abs()
  * Ã¼s alma : Math.pow(a,b)
*/

import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;

public class GenerateInput {
    public static void main(String[] args) throws IOException {

        Random random = new Random();
        FileWriter writer = new FileWriter("Tests/src/grahamScan/test.txt",false);

        for(int i =1 ; i <= 1000; i++){

            double number = (double)((int)(random.nextDouble(-1000,1000)*100))/100;
            if(i%2 == 1)
                writer.write(number + " ");
            else
                writer.write(number + "\n");
        }
        writer.close();
    }
}

